// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.MarginTrading.Client.AutorestClient
{
    using Microsoft.Rest;
    using Models;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// </summary>
    public partial interface IMarginTradingApi : System.IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        System.Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }


        /// <summary>
        /// Returns margin account by id
        /// </summary>
        /// <param name='clientId'>
        /// </param>
        /// <param name='accountId'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<MarginTradingAccountBackendContract>> ApiAccountprofileAccountByClientIdByAccountIdGetWithHttpMessagesAsync(string clientId, string accountId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Returns account open positions by account id
        /// </summary>
        /// <param name='accountId'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<OrderContract>>> ApiAccountprofileOpenPositionsByAccountIdGetWithHttpMessagesAsync(string accountId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Returns account history by account id
        /// </summary>
        /// <param name='clientId'>
        /// </param>
        /// <param name='accountId'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<AccountHistoryBackendResponse>> ApiAccountprofileHistoryByClientIdByAccountIdGetWithHttpMessagesAsync(string clientId, string accountId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='request'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<BackendResponseAccountDepositWithdrawResponse>> ApiAccountsBalanceDepositPostWithHttpMessagesAsync(string apiKey, AccountDepositWithdrawRequest request = default(AccountDepositWithdrawRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='request'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<BackendResponseAccountDepositWithdrawResponse>> ApiAccountsBalanceWithdrawPostWithHttpMessagesAsync(string apiKey, AccountDepositWithdrawRequest request = default(AccountDepositWithdrawRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Manually charge client's account. Amount is absolute, i.e. negative
        /// value goes for charging.
        /// </summary>
        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='request'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<BackendResponseAccountChargeManuallyResponse>> ApiAccountsBalanceChargeManuallyPostWithHttpMessagesAsync(string apiKey, AccountChargeManuallyRequest request = default(AccountChargeManuallyRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='request'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<BackendResponseAccountResetResponse>> ApiAccountsBalanceResetPostWithHttpMessagesAsync(string apiKey, AccounResetRequest request = default(AccounResetRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='request'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<bool?>> ApiBackofficeMarginTradingAccountsDepositPostWithHttpMessagesAsync(string apiKey, AccountDepositWithdrawRequest request = default(AccountDepositWithdrawRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='request'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<bool?>> ApiBackofficeMarginTradingAccountsWithdrawPostWithHttpMessagesAsync(string apiKey, AccountDepositWithdrawRequest request = default(AccountDepositWithdrawRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='request'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<bool?>> ApiBackofficeMarginTradingAccountsResetPostWithHttpMessagesAsync(string apiKey, AccounResetRequest request = default(AccounResetRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get all accounts where (balance + pnl) / Used margin less or equal
        /// than threshold value
        /// </summary>
        /// <param name='threshold'>
        /// Minimal margin usege level
        /// </param>
        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<AccountsMarginLevelResponse>> ApiAccountsManagementMarginLevelsByThresholdGetWithHttpMessagesAsync(double threshold, string apiKey, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Close positions for accounts
        /// </summary>
        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='request'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<CloseAccountPositionsResponse>> ApiAccountsManagementClosePositionsPostWithHttpMessagesAsync(string apiKey, CloseAccountPositionsRequest request = default(CloseAccountPositionsRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Sets trading condition for account
        /// </summary>
        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='model'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<MtBackendResponseMarginTradingAccountModel>> SetTradingConditionWithHttpMessagesAsync(string apiKey, SetTradingConditionModel model = default(SetTradingConditionModel), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Create accounts with requested base asset for all users
        /// that already have accounts with requested trading condition
        /// </summary>
        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='request'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<MtBackendResponseIEnumerableMarginTradingAccountModel>> InitAccountGroupWithHttpMessagesAsync(string apiKey, InitAccountGroupRequest request = default(InitAccountGroupRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Update existing settings for a pair
        /// </summary>
        /// <param name='assetPairId'>
        /// </param>
        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='settings'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<AssetPairContract>> ApiAssetPairsByAssetPairIdPutWithHttpMessagesAsync(string assetPairId, string apiKey, AssetPairInputContract settings = default(AssetPairInputContract), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Insert new settings for a pair
        /// </summary>
        /// <param name='assetPairId'>
        /// </param>
        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='settings'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<AssetPairContract>> ApiAssetPairsByAssetPairIdPostWithHttpMessagesAsync(string assetPairId, string apiKey, AssetPairInputContract settings = default(AssetPairInputContract), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Delete existing settings for a pair
        /// </summary>
        /// <param name='assetPairId'>
        /// </param>
        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<AssetPairContract>> ApiAssetPairsByAssetPairIdDeleteWithHttpMessagesAsync(string assetPairId, string apiKey, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Returns summary asset info
        /// </summary>
        /// <remarks>
        /// VolumeLong is a sum of long positions volume
        ///
        /// VolumeShort is a sum of short positions volume
        ///
        /// PnL is a sum of all positions PnL
        ///
        /// Header "api-key" is required
        /// </remarks>
        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<SummaryAssetInfo>>> ApiBackofficeAssetsInfoGetWithHttpMessagesAsync(string apiKey, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Returns list of opened positions
        /// </summary>
        /// <remarks>
        /// Returns list of opened positions with matched volume greater or
        /// equal provided "volume" parameter
        ///
        /// Header "api-key" is required
        /// </remarks>
        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='volume'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<OrderContract>>> ApiBackofficePositionsByVolumeGetWithHttpMessagesAsync(string apiKey, double? volume = default(double?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Returns list of pending orders
        /// </summary>
        /// <remarks>
        /// Returns list of pending orders with volume greater or equal
        /// provided "volume" parameter
        ///
        /// Header "api-key" is required
        /// </remarks>
        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='volume'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<OrderContract>>> ApiBackofficePendingOrdersByVolumeGetWithHttpMessagesAsync(string apiKey, double? volume = default(double?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='clientId'>
        /// </param>
        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<MarginTradingAccount>>> ApiBackofficeMarginTradingAccountsGetallByClientIdGetWithHttpMessagesAsync(string clientId, string apiKey, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='clientId'>
        /// </param>
        /// <param name='accountId'>
        /// </param>
        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> ApiBackofficeMarginTradingAccountsDeleteByClientIdByAccountIdPostWithHttpMessagesAsync(string clientId, string accountId, string apiKey, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='request'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<InitAccountsResponse>> ApiBackofficeMarginTradingAccountsInitPostWithHttpMessagesAsync(string apiKey, InitAccountsRequest request = default(InitAccountsRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='account'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> ApiBackofficeMarginTradingAccountsAddPostWithHttpMessagesAsync(string apiKey, MarginTradingAccount account = default(MarginTradingAccount), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<MatchingEngineRoute>>> ApiBackofficeRoutesGetWithHttpMessagesAsync(string apiKey, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='request'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> ApiBackofficeRoutesPostWithHttpMessagesAsync(string apiKey, NewMatchingEngineRouteRequest request = default(NewMatchingEngineRouteRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='id'>
        /// </param>
        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<MatchingEngineRoute>> ApiBackofficeRoutesByIdGetWithHttpMessagesAsync(string id, string apiKey, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='id'>
        /// </param>
        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='request'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> ApiBackofficeRoutesByIdPutWithHttpMessagesAsync(string id, string apiKey, NewMatchingEngineRouteRequest request = default(NewMatchingEngineRouteRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='id'>
        /// </param>
        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> ApiBackofficeRoutesByIdDeleteWithHttpMessagesAsync(string id, string apiKey, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='clientId'>
        /// </param>
        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='enabled'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> ApiBackofficeSettingsEnabledByClientIdPostWithHttpMessagesAsync(string clientId, string apiKey, bool? enabled = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IsAliveResponse>> ApiIsAliveGetWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='request'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<InitDataBackendResponse>> ApiMtInitdataPostWithHttpMessagesAsync(string apiKey, ClientIdBackendRequest request = default(ClientIdBackendRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// uses in BoxOptions app only
        /// </summary>
        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<InitChartDataBackendResponse>> ApiMtInitchartdataPostWithHttpMessagesAsync(string apiKey, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='request'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<MarginTradingAccountBackendContract>>> ApiMtInitaccountsPostWithHttpMessagesAsync(string apiKey, ClientIdBackendRequest request = default(ClientIdBackendRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='request'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<InitAccountInstrumentsBackendResponse>> ApiMtInitaccountinstrumentsPostWithHttpMessagesAsync(string apiKey, ClientIdBackendRequest request = default(ClientIdBackendRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='request'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<InitChartDataBackendResponse>> ApiMtInitgraphPostWithHttpMessagesAsync(string apiKey, InitChartDataBackendRequest request = default(InitChartDataBackendRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='request'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<string>>> ApiMtInitavailableassetsPostWithHttpMessagesAsync(string apiKey, ClientIdBackendRequest request = default(ClientIdBackendRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='request'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<AssetPairBackendContract>>> ApiMtInitassetsPostWithHttpMessagesAsync(string apiKey, ClientIdBackendRequest request = default(ClientIdBackendRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='request'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IDictionary<string, InstrumentBidAskPairContract>>> ApiMtInitpricesPostWithHttpMessagesAsync(string apiKey, InitPricesBackendRequest request = default(InitPricesBackendRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='request'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<AccountHistoryBackendResponse>> ApiMtAccounthistoryPostWithHttpMessagesAsync(string apiKey, AccountHistoryBackendRequest request = default(AccountHistoryBackendRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='request'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<AccountNewHistoryBackendResponse>> ApiMtAccounthistorynewPostWithHttpMessagesAsync(string apiKey, AccountHistoryBackendRequest request = default(AccountHistoryBackendRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='request'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<OpenOrderBackendResponse>> ApiMtOrderplacePostWithHttpMessagesAsync(string apiKey, OpenOrderBackendRequest request = default(OpenOrderBackendRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='request'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<MtBackendResponseBoolean>> ApiMtOrderclosePostWithHttpMessagesAsync(string apiKey, CloseOrderBackendRequest request = default(CloseOrderBackendRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='request'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<MtBackendResponseBoolean>> ApiMtOrdercancelPostWithHttpMessagesAsync(string apiKey, CloseOrderBackendRequest request = default(CloseOrderBackendRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='request'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<OrderBackendContract>>> ApiMtOrderlistPostWithHttpMessagesAsync(string apiKey, ClientIdBackendRequest request = default(ClientIdBackendRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='request'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<OrderBackendContract>>> ApiMtOrderaccountlistPostWithHttpMessagesAsync(string apiKey, AccountClientIdBackendRequest request = default(AccountClientIdBackendRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='request'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ClientOrdersBackendResponse>> ApiMtOrderpositionsPostWithHttpMessagesAsync(string apiKey, ClientIdBackendRequest request = default(ClientIdBackendRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='request'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<MtBackendResponseBoolean>> ApiMtOrderchangeLimitsPostWithHttpMessagesAsync(string apiKey, ChangeOrderLimitsBackendRequest request = default(ChangeOrderLimitsBackendRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='request'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<OrderbooksBackendResponse>> ApiMtOrderbooksPostWithHttpMessagesAsync(string apiKey, OrderbooksBackendRequest request = default(OrderbooksBackendRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<MtBackendResponseString>> ApiMtPingPostWithHttpMessagesAsync(string apiKey, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='fromParameter'>
        /// </param>
        /// <param name='to'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<IOvernightSwapHistory>>> ApiOvernightswapHistoryPostWithHttpMessagesAsync(string apiKey, System.DateTime? fromParameter = default(System.DateTime?), System.DateTime? to = default(System.DateTime?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Invoke recalculation of account/instrument/direction order packages
        /// that were not calculated successfully last time.
        /// </summary>
        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> ApiOvernightswapRecalcfailedordersPostWithHttpMessagesAsync(string apiKey, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<AssetPairBackendContract>>> ApiRisksAssetsGetWithHttpMessagesAsync(string apiKey, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<MarginTradingAccountBackendContract>>> ApiRisksAccountsGetWithHttpMessagesAsync(string apiKey, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='accountId'>
        /// </param>
        /// <param name='fromParameter'>
        /// </param>
        /// <param name='to'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IDictionary<string, IList<AccountHistoryBackendContract>>>> ApiRisksAccountsHistoryGetWithHttpMessagesAsync(string apiKey, string accountId = default(string), System.DateTime? fromParameter = default(System.DateTime?), System.DateTime? to = default(System.DateTime?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get all exclusions
        /// </summary>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<DayOffExclusionContract>>> ApiScheduleSettingsExclusionsGetWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Create exclusion
        /// </summary>
        /// <param name='contract'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<DayOffExclusionContract>> ApiScheduleSettingsExclusionsPostWithHttpMessagesAsync(DayOffExclusionInputContract contract = default(DayOffExclusionInputContract), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get exclusion by id
        /// </summary>
        /// <param name='id'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<DayOffExclusionContract>> ApiScheduleSettingsExclusionsByIdGetWithHttpMessagesAsync(System.Guid id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Update exclusion
        /// </summary>
        /// <param name='id'>
        /// </param>
        /// <param name='contract'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<DayOffExclusionContract>> ApiScheduleSettingsExclusionsByIdPutWithHttpMessagesAsync(System.Guid id, DayOffExclusionInputContract contract = default(DayOffExclusionInputContract), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Delete exclusion
        /// </summary>
        /// <param name='id'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> ApiScheduleSettingsExclusionsByIdDeleteWithHttpMessagesAsync(System.Guid id, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Get all compiled exclusions
        /// </summary>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<CompiledExclusionsListContract>> ApiScheduleSettingsExclusionsCompiledGetWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ScheduleSettingsContract>> ApiScheduleSettingsGetWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='scheduleSettingsContract'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ScheduleSettingsContract>> ApiScheduleSettingsPutWithHttpMessagesAsync(ScheduleSettingsContract scheduleSettingsContract = default(ScheduleSettingsContract), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<MtBackendResponseBoolean>> ApiServiceMaintenanceGetWithHttpMessagesAsync(string apiKey, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='enabled'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<MtBackendResponseBoolean>> ApiServiceMaintenancePostWithHttpMessagesAsync(string apiKey, bool? enabled = default(bool?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='model'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<MtBackendResponseTradingConditionModel>> AddOrReplaceTradingConditionWithHttpMessagesAsync(string apiKey, TradingConditionModel model = default(TradingConditionModel), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='model'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<MtBackendResponseAccountGroupModel>> AddOrReplaceAccountGroupWithHttpMessagesAsync(string apiKey, AccountGroupModel model = default(AccountGroupModel), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='model'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<MtBackendResponseIEnumerableAccountAssetPairModel>> AssignInstrumentsWithHttpMessagesAsync(string apiKey, AssignInstrumentsRequest model = default(AssignInstrumentsRequest), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <param name='apiKey'>
        /// access token
        /// </param>
        /// <param name='model'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<BackendResponseAccountAssetPairContract>> AddOrReplaceAccountAssetWithHttpMessagesAsync(string apiKey, AccountAssetPairContract model = default(AccountAssetPairContract), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

    }
}
