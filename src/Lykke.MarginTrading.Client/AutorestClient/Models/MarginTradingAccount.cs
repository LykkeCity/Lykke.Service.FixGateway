// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.MarginTrading.Client.AutorestClient.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class MarginTradingAccount
    {
        /// <summary>
        /// Initializes a new instance of the MarginTradingAccount class.
        /// </summary>
        public MarginTradingAccount()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MarginTradingAccount class.
        /// </summary>
        public MarginTradingAccount(double balance, double withdrawTransferLimit, string id = default(string), string clientId = default(string), string tradingConditionId = default(string), string baseAssetId = default(string), string legalEntity = default(string))
        {
            Id = id;
            ClientId = clientId;
            TradingConditionId = tradingConditionId;
            BaseAssetId = baseAssetId;
            Balance = balance;
            WithdrawTransferLimit = withdrawTransferLimit;
            LegalEntity = legalEntity;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "clientId")]
        public string ClientId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tradingConditionId")]
        public string TradingConditionId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "baseAssetId")]
        public string BaseAssetId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "balance")]
        public double Balance { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "withdrawTransferLimit")]
        public double WithdrawTransferLimit { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "legalEntity")]
        public string LegalEntity { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
