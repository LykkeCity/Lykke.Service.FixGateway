// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.MarginTrading.Client.AutorestClient.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class MatchedOrderBackendContract
    {
        /// <summary>
        /// Initializes a new instance of the MatchedOrderBackendContract
        /// class.
        /// </summary>
        public MatchedOrderBackendContract()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MatchedOrderBackendContract
        /// class.
        /// </summary>
        public MatchedOrderBackendContract(double limitOrderLeftToMatch, double volume, double price, System.DateTime matchedDate, string orderId = default(string), string marketMakerId = default(string))
        {
            OrderId = orderId;
            MarketMakerId = marketMakerId;
            LimitOrderLeftToMatch = limitOrderLeftToMatch;
            Volume = volume;
            Price = price;
            MatchedDate = matchedDate;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "orderId")]
        public string OrderId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "marketMakerId")]
        public string MarketMakerId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "limitOrderLeftToMatch")]
        public double LimitOrderLeftToMatch { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "volume")]
        public double Volume { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "price")]
        public double Price { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "matchedDate")]
        public System.DateTime MatchedDate { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
