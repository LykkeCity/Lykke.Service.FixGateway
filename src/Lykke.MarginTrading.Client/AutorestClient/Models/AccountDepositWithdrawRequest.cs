// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.MarginTrading.Client.AutorestClient.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class AccountDepositWithdrawRequest
    {
        /// <summary>
        /// Initializes a new instance of the AccountDepositWithdrawRequest
        /// class.
        /// </summary>
        public AccountDepositWithdrawRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AccountDepositWithdrawRequest
        /// class.
        /// </summary>
        /// <param name="paymentType">Possible values include: 'Transfer',
        /// 'Swift', 'BankCard'</param>
        public AccountDepositWithdrawRequest(PaymentType paymentType, double amount, string clientId = default(string), string accountId = default(string), string transactionId = default(string))
        {
            ClientId = clientId;
            AccountId = accountId;
            PaymentType = paymentType;
            Amount = amount;
            TransactionId = transactionId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "clientId")]
        public string ClientId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "accountId")]
        public string AccountId { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Transfer', 'Swift',
        /// 'BankCard'
        /// </summary>
        [JsonProperty(PropertyName = "paymentType")]
        public PaymentType PaymentType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "amount")]
        public double Amount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "transactionId")]
        public string TransactionId { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
        }
    }
}
