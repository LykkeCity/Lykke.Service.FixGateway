// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.MarginTrading.Client.AutorestClient.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class BackendResponseAccountAssetPairContract
    {
        /// <summary>
        /// Initializes a new instance of the
        /// BackendResponseAccountAssetPairContract class.
        /// </summary>
        public BackendResponseAccountAssetPairContract()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// BackendResponseAccountAssetPairContract class.
        /// </summary>
        public BackendResponseAccountAssetPairContract(AccountAssetPairContract result = default(AccountAssetPairContract), string errorMessage = default(string), string message = default(string), bool? isOk = default(bool?))
        {
            Result = result;
            ErrorMessage = errorMessage;
            Message = message;
            IsOk = isOk;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "result")]
        public AccountAssetPairContract Result { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "errorMessage")]
        public string ErrorMessage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "message")]
        public string Message { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isOk")]
        public bool? IsOk { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Result != null)
            {
                Result.Validate();
            }
        }
    }
}
