// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.MarginTrading.Client.AutorestClient.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class LimitOrderBackendContract
    {
        /// <summary>
        /// Initializes a new instance of the LimitOrderBackendContract class.
        /// </summary>
        public LimitOrderBackendContract()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LimitOrderBackendContract class.
        /// </summary>
        public LimitOrderBackendContract(double volume, double price, System.DateTime createDate, string id = default(string), string marketMakerId = default(string), string instrument = default(string), IList<MatchedOrderBackendContract> matchedOrders = default(IList<MatchedOrderBackendContract>))
        {
            Id = id;
            MarketMakerId = marketMakerId;
            Instrument = instrument;
            Volume = volume;
            Price = price;
            CreateDate = createDate;
            MatchedOrders = matchedOrders;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "marketMakerId")]
        public string MarketMakerId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "instrument")]
        public string Instrument { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "volume")]
        public double Volume { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "price")]
        public double Price { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createDate")]
        public System.DateTime CreateDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "matchedOrders")]
        public IList<MatchedOrderBackendContract> MatchedOrders { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (MatchedOrders != null)
            {
                foreach (var element in MatchedOrders)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
