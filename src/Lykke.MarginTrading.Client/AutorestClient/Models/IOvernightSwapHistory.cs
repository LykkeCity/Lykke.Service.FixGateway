// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.MarginTrading.Client.AutorestClient.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class IOvernightSwapHistory
    {
        /// <summary>
        /// Initializes a new instance of the IOvernightSwapHistory class.
        /// </summary>
        public IOvernightSwapHistory()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IOvernightSwapHistory class.
        /// </summary>
        /// <param name="direction">Possible values include: 'Buy',
        /// 'Sell'</param>
        public IOvernightSwapHistory(bool? isSuccess = default(bool?), object exception = default(object), string clientId = default(string), string accountId = default(string), string instrument = default(string), OrderDirection? direction = default(OrderDirection?), System.DateTime? time = default(System.DateTime?), double? volume = default(double?), double? value = default(double?), double? swapRate = default(double?), IList<string> openOrderIds = default(IList<string>))
        {
            IsSuccess = isSuccess;
            Exception = exception;
            ClientId = clientId;
            AccountId = accountId;
            Instrument = instrument;
            Direction = direction;
            Time = time;
            Volume = volume;
            Value = value;
            SwapRate = swapRate;
            OpenOrderIds = openOrderIds;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isSuccess")]
        public bool? IsSuccess { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "exception")]
        public object Exception { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "clientId")]
        public string ClientId { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "accountId")]
        public string AccountId { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "instrument")]
        public string Instrument { get; private set; }

        /// <summary>
        /// Gets possible values include: 'Buy', 'Sell'
        /// </summary>
        [JsonProperty(PropertyName = "direction")]
        public OrderDirection? Direction { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "time")]
        public System.DateTime? Time { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "volume")]
        public double? Volume { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "value")]
        public double? Value { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "swapRate")]
        public double? SwapRate { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "openOrderIds")]
        public IList<string> OpenOrderIds { get; private set; }

    }
}
