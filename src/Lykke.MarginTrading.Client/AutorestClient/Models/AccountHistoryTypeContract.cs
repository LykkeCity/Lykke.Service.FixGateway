// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.MarginTrading.Client.AutorestClient.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for AccountHistoryTypeContract.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum AccountHistoryTypeContract
    {
        [EnumMember(Value = "Deposit")]
        Deposit,
        [EnumMember(Value = "Withdraw")]
        Withdraw,
        [EnumMember(Value = "OrderClosed")]
        OrderClosed,
        [EnumMember(Value = "Reset")]
        Reset,
        [EnumMember(Value = "Swap")]
        Swap,
        [EnumMember(Value = "Manual")]
        Manual
    }
    internal static class AccountHistoryTypeContractEnumExtension
    {
        internal static string ToSerializedValue(this AccountHistoryTypeContract? value)
        {
            return value == null ? null : ((AccountHistoryTypeContract)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this AccountHistoryTypeContract value)
        {
            switch( value )
            {
                case AccountHistoryTypeContract.Deposit:
                    return "Deposit";
                case AccountHistoryTypeContract.Withdraw:
                    return "Withdraw";
                case AccountHistoryTypeContract.OrderClosed:
                    return "OrderClosed";
                case AccountHistoryTypeContract.Reset:
                    return "Reset";
                case AccountHistoryTypeContract.Swap:
                    return "Swap";
                case AccountHistoryTypeContract.Manual:
                    return "Manual";
            }
            return null;
        }

        internal static AccountHistoryTypeContract? ParseAccountHistoryTypeContract(this string value)
        {
            switch( value )
            {
                case "Deposit":
                    return AccountHistoryTypeContract.Deposit;
                case "Withdraw":
                    return AccountHistoryTypeContract.Withdraw;
                case "OrderClosed":
                    return AccountHistoryTypeContract.OrderClosed;
                case "Reset":
                    return AccountHistoryTypeContract.Reset;
                case "Swap":
                    return AccountHistoryTypeContract.Swap;
                case "Manual":
                    return AccountHistoryTypeContract.Manual;
            }
            return null;
        }
    }
}
