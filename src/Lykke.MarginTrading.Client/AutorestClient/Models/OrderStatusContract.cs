// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Lykke.MarginTrading.Client.AutorestClient.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for OrderStatusContract.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum OrderStatusContract
    {
        [EnumMember(Value = "WaitingForExecution")]
        WaitingForExecution,
        [EnumMember(Value = "Active")]
        Active,
        [EnumMember(Value = "Closed")]
        Closed,
        [EnumMember(Value = "Rejected")]
        Rejected,
        [EnumMember(Value = "Closing")]
        Closing
    }
    internal static class OrderStatusContractEnumExtension
    {
        internal static string ToSerializedValue(this OrderStatusContract? value)
        {
            return value == null ? null : ((OrderStatusContract)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this OrderStatusContract value)
        {
            switch( value )
            {
                case OrderStatusContract.WaitingForExecution:
                    return "WaitingForExecution";
                case OrderStatusContract.Active:
                    return "Active";
                case OrderStatusContract.Closed:
                    return "Closed";
                case OrderStatusContract.Rejected:
                    return "Rejected";
                case OrderStatusContract.Closing:
                    return "Closing";
            }
            return null;
        }

        internal static OrderStatusContract? ParseOrderStatusContract(this string value)
        {
            switch( value )
            {
                case "WaitingForExecution":
                    return OrderStatusContract.WaitingForExecution;
                case "Active":
                    return OrderStatusContract.Active;
                case "Closed":
                    return OrderStatusContract.Closed;
                case "Rejected":
                    return OrderStatusContract.Rejected;
                case "Closing":
                    return OrderStatusContract.Closing;
            }
            return null;
        }
    }
}
